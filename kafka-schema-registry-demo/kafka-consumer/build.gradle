buildscript {
    ext {
        avroPluginVersion = '0.14.1'
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
        classpath("com.commercehub.gradle.plugin:gradle-avro-plugin:${avroPluginVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: "com.commercehub.gradle.plugin.avro-base"

group 'com.bigdata.kafka'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url "http://packages.confluent.io/maven"
    }
}

dependencies {
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.0.0'
    compile group: 'io.confluent', name: 'kafka-avro-serializer', version: '5.0.0'
    compile "org.apache.avro:avro:1.8.2"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    manifest {
        attributes "Main-Class": "com.bigdata.kafka.KafkaConsumer"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.bigdata.kafka.KafkaConsumer'
    }
    baseName = 'all-in-one-jar'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

avro {
    createSetters = false
    fieldVisibility = "PRIVATE"
}

task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    source("etc/avro")
    outputDir = file("src/main/java")
}
compileJava.source(generateAvro.outputs)